{
  "problem_num": 7,
  "problem_name": "Reverse Integer",
  "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.",
  "difficulty": "Medium",
  "acceptance": 70,
  "Expected_Time_Constraints": "O(log|x|)",
  "Expected_Space_Constraints": "O(1)",
  "templates": {
    "javascript": "/**\n * @param {number} x\n * @return {number}\n */\nfunction reverse(x) {\n    // Your code here\n}",
    "python": "def reverse(x: int) -> int:\n    # Your code here\n    pass",
    "java": "class Solution {\n    public int reverse(int x) {\n        // Your code here\n    }\n}",
    "cpp": "class Solution {\npublic:\n    int reverse(int x) {\n        // Your code here\n    }\n};",
    "go": "func reverse(x int) int {\n    // Your code here\n}",
    "rust": "impl Solution {\n    pub fn reverse(x: i32) -> i32 {\n        // Your code here\n    }\n}"
  },
  "Run_testCases": [
    {
      "input": {
        "x": 123
      },
      "expected": 321
    },
    {
      "input": {
        "x": -123
      },
      "expected": -321
    },
    {
      "input": {
        "x": 120
      },
      "expected": 21
    }
  ],
  "Submit_testCases": [
    { "array": [5, 1, 2, 3, 4], "expected": 5 },
    { "array": [0, 0, 0], "expected": 0 },
    { "array": [100, 200, 300], "expected": 300 },
    { "array": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "expected": 10 },
    { "array": [-5, -1, -2, -3], "expected": -1 },
    { "array": [1], "expected": 1 },
    { "array": [3, 5, 2, 8, 1], "expected": 8 },
    { "array": [7, 3, 9, 4], "expected": 9 },
    { "array": [10, 10, 10], "expected": 10 },
    { "array": [0, 1, 2, 3], "expected": 3 },
    { "array": [-10, -20, -30], "expected": -10 },
    { "array": [1000, 500, 250], "expected": 1000 },
    { "array": [1, 2, 3, 4, 5, 6], "expected": 6 },
    { "array": [5, 5, 5, 5], "expected": 5 },
    { "array": [2, 3, 1], "expected": 3 },
    { "array": [4, 2, 8, 6], "expected": 8 },
    { "array": [15, 20, 25, 10], "expected": 25 },
    { "array": [9, 8, 7, 6], "expected": 9 },
    { "array": [0, -1, -2, -3], "expected": 0 },
    { "array": [100, 200, 150], "expected": 200 },
    { "array": [1, 3, 5, 7, 9], "expected": 9 },
    { "array": [2, 4, 6, 8, 10], "expected": 10 },
    { "array": [3, 3, 3], "expected": 3 },
    { "array": [5, 4, 3, 2, 1], "expected": 5 },
    { "array": [1, 2, 3, 4, 5, 6, 7], "expected": 7 },
    { "array": [10, 20, 30, 40, 50], "expected": 50 },
    { "array": [0, 0, 1, 1], "expected": 1 },
    { "array": [1, 2, 2, 1], "expected": 2 },
    { "array": [5, 3, 8, 1, 2], "expected": 8 },
    { "array": [10, 7, 8, 9, 1, 5], "expected": 10 },
    { "array": [3, 0, 2, 5, -1, 4, 1], "expected": 5 },
    { "array": [1, 2, 3], "expected": 3 },
    { "array": [6, 5, 4, 3, 2, 1], "expected": 6 },
    { "array": [1, 1, 1, 1], "expected": 1 },
    { "array": [100, 50, 75], "expected": 100 },
    { "array": [3, 3, 3], "expected": 3 },
    { "array": [1, 2, 3, 2, 1], "expected": 3 },
    { "array": [5, 1, 4, 2, 3], "expected": 5 },
    { "array": [8, 7, 6, 5, 4, 3, 2, 1], "expected": 8 },
    { "array": [1, 4, 3, 2], "expected": 4 },
    { "array": [10, 20, 10, 30], "expected": 30 },
    { "array": [0, 0, 1, 1], "expected": 1 },
    { "array": [5, 3, 8, 1, 2, 6], "expected": 8 },
    { "array": [0, 0, 0, 0], "expected": 0 },
    { "array": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "expected": 10 }
  ]
} 